{"version":3,"sources":["axios.js","Components/UI/Input/Input.js","Components/UI/Select/Select.js","store/actions/actionTypes.js","store/actions/adminPanel.js","Components/Admin/AdminPanel.js","App.js","reportWebVitals.js","store/reducers/adminPanel.js","index.js"],"names":["instance","axios","create","baseURL","useStyles","makeStyles","theme","root","margin","spacing","width","BasicTextFields","props","classes","id","name","className","noValidate","autoComplete","TextField","type","onChange","clicked","multiline","rows","label","variant","formControl","minWidth","selectEmpty","marginTop","SimpleSelect","FormControl","InputLabel","Select","labelId","value","MenuItem","SET_INPUT_STATE","SEND_DATA_SUCCESS","saveData","data","password","dispatch","post","select","then","res","actionTypes","connect","state","inputState","adminPanel","inputs","actions","onSubmit","handleChange","e","preventDefault","target","github","liveDemo","description","toolsUsed","Button","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","rootReducer","combineReducers","adminPanelReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65da5d4c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://saurab-gami-projects-default-rtdb.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function BasicTextFields(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form id={props.name} className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField type={props.type} onChange={props.clicked} name={props.name} multiline={props.multiline} rows={5} label={props.label} variant=\"outlined\" />\r\n        </form>\r\n    );\r\n}\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 220,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    // const [age, setAge] = React.useState('');\r\n\r\n    // const handleChange = (event) => {\r\n    //     setAge(event.target.value);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={props.value}\r\n                    onChange={props.clicked}\r\n                    name={props.name}\r\n                >\r\n                    <MenuItem value='advanced'>Advanced</MenuItem>\r\n                    <MenuItem value='fun'>Fun</MenuItem>\r\n                    <MenuItem value='basic'>Basic</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","export const SET_INPUT_STATE = 'SET_INPUT_STATE';\r\nexport const SAVE_DATA = 'SAVE_DATA';\r\nexport const SEND_DATA_SUCCESS = 'SEND_DATA_SUCCESS';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n\r\nexport const setInputState = (name, value) => {\r\n    return {\r\n        type: actionTypes.SET_INPUT_STATE,\r\n        name: name,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const sendDataSuccess = () => {\r\n    return {\r\n        type: actionTypes.SEND_DATA_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const saveData = (data) => {\r\n    return data.password === 'mydelllaptop977' ?\r\n        dispatch => {\r\n            axios.post(`/projects/${data.select}.json`, data)\r\n                .then(res => {\r\n                    dispatch(sendDataSuccess())\r\n                })\r\n        } : {\r\n            type: actionTypes.SEND_DATA_SUCCESS\r\n        };\r\n}","import { Button } from '@material-ui/core'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Input from '../UI/Input/Input'\r\nimport SimpleSelect from '../UI/Select/Select';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nfunction AdminPanel(props) {\r\n\r\n    const handleChange = (name, value) => {\r\n        props.onChange(name, value)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            props.onSubmit(props.inputState);\r\n        }}>\r\n            <SimpleSelect value={props.inputState.select} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"select\" />\r\n            <Input value={props.inputState.name} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"name\" label=\"Project Name\" />\r\n            <Input value={props.inputState.github} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"github\" label=\"Github\" />\r\n            <Input value={props.inputState.liveDemo} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"liveDemo\" label=\"Live Demo\" />\r\n            <Input value={props.inputState.description} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"description\" label=\"Description\" multiline />\r\n            <Input value={props.inputState.toolsUsed} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"toolsUsed\" label=\"Tools used\" multiline />\r\n            <Input type='password' value={props.inputState.password} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"password\" label=\"Password\" />\r\n            <Button type='submit'>Submit</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputState: state.adminPanel.inputs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onChange: (name, value) => dispatch(actions.setInputState(name, value)),\r\n        onSubmit: (data) => dispatch(actions.saveData(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanel)\r\n","import './App.css';\nimport axios from './axios';\nimport AdminPanel from './Components/Admin/AdminPanel';\n\nfunction App() {\n  // {\n  //   axios.get('/projects/Advanced.json')\n  //     .then(res => console.log(res.data))\n  // }\n  return (\n    <div className=\"App\">\n      <AdminPanel />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    inputs: {\r\n        select: 'advanced',\r\n        name: '',\r\n        github: '',\r\n        liveDemo: '',\r\n        description: '',\r\n        toolsUsed: [],\r\n        password: null,\r\n    },\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_INPUT_STATE:\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.name]: action.value\r\n                }\r\n            }\r\n        case actionTypes.SEND_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    select: 'advanced',\r\n                    name: '',\r\n                    github: '',\r\n                    liveDemo: '',\r\n                    description: '',\r\n                    toolsUsed: [],\r\n                    password: null,\r\n                }\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport adminPanelReducer from './store/reducers/adminPanel';\n\nconst rootReducer = combineReducers({\n  adminPanel: adminPanelReducer\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}