{"version":3,"sources":["Components/UI/Input/Input.js","Components/UI/Select/Select.js","store/actions/actionTypes.js","axios.js","store/actions/adminPanel.js","store/actions/homepageActions.js","Containers/Admin/AdminPanel.js","Components/Card/Card.js","Containers/Homepage/Homepage.js","Components/Navbar/Navbar.js","App.js","reportWebVitals.js","store/reducers/adminPanel.js","store/reducers/homepageReducer.js","index.js","Containers/Admin/AdminPanel.module.css"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","BasicTextFields","props","classes","id","name","className","noValidate","autoComplete","TextField","type","onChange","clicked","multiline","rows","label","variant","formControl","minWidth","selectEmpty","marginTop","SimpleSelect","FormControl","InputLabel","Select","labelId","value","MenuItem","SET_INPUT_STATE","SEND_DATA_SUCCESS","FETCH_PROJECTS_DATA","instance","axios","create","baseURL","saveData","data","password","dispatch","post","select","then","res","actionTypes","fetchData","get","connect","state","inputState","adminPanel","inputs","actions","onSubmit","handleChange","e","preventDefault","target","github","liveDemo","image","description","toolsUsed","Button","fullWidth","color","maxWidth","minHeight","media","height","MediaCard","Card","CardActionArea","CardMedia","title","CardContent","Typography","gutterBottom","component","CardActions","size","href","projects","homepage","onfetch","useEffect","myProjects","property","keys","push","advanced","filter","project","basic","Grid","style","padding","container","item","xs","marginBottom","map","index","lg","sm","md","section","flexGrow","menuButton","marginRight","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","SearchAppBar","AppBar","Toolbar","onClick","history","noWrap","window","location","replace","InputBase","placeholder","input","inputProps","App","path","Navbar","exact","Homepage","AdminPanel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","rootReducer","combineReducers","adminPanelReducer","homepageReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f77ee72a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '95%',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function BasicTextFields(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form id={props.name} className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField type={props.type} onChange={props.clicked} name={props.name} multiline={props.multiline} rows={5} label={props.label} variant=\"outlined\" />\r\n        </form>\r\n    );\r\n}\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '95%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={props.value}\r\n                    onChange={props.clicked}\r\n                    name={props.name}\r\n                >\r\n                    <MenuItem value='advanced'>Advanced</MenuItem>\r\n                    <MenuItem value='fun'>Fun</MenuItem>\r\n                    <MenuItem value='basic'>Basic</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","export const SET_INPUT_STATE = 'SET_INPUT_STATE';\r\nexport const SAVE_DATA = 'SAVE_DATA';\r\nexport const SEND_DATA_SUCCESS = 'SEND_DATA_SUCCESS';\r\n\r\n//Homepage\r\n\r\nexport const FETCH_PROJECTS_DATA = 'FETCH_PROJECTS_DATA';","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://saurab-gami-projects-default-rtdb.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\n\r\nexport const setInputState = (name, value) => {\r\n    return {\r\n        type: actionTypes.SET_INPUT_STATE,\r\n        name: name,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const sendDataSuccess = () => {\r\n    return {\r\n        type: actionTypes.SEND_DATA_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const saveData = (data) => {\r\n    return data.password === 'mydelllaptop977' ?\r\n        dispatch => {\r\n            axios.post(`/projects/${data.select}.json`, data)\r\n                .then(res => {\r\n                    dispatch(sendDataSuccess())\r\n                })\r\n        } : {\r\n            type: actionTypes.SEND_DATA_SUCCESS,\r\n            // dispatch(alert('Wrong Password!!!'))\r\n        };\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios'\r\n\r\n\r\nexport const setData = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_PROJECTS_DATA,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const fetchData = () => {\r\n    return dispatch => {\r\n        axios.get(`/projects.json`)\r\n            .then(res => {\r\n                dispatch(setData(res.data))\r\n            })\r\n    };\r\n}","import { Button } from '@material-ui/core'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Input from '../../Components/UI/Input/Input'\r\nimport SimpleSelect from '../../Components/UI/Select/Select';\r\nimport * as actions from '../../store/actions/index';\r\nimport * as classes from './AdminPanel.module.css';\r\n\r\nfunction AdminPanel(props) {\r\n\r\n    const handleChange = (name, value) => {\r\n        props.onChange(name, value)\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={classes.Form}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(props.inputState);\r\n            }}\r\n        >\r\n            <SimpleSelect value={props.inputState.select} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"select\" />\r\n            <Input value={props.inputState.name} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"name\" label=\"Project Name\" />\r\n            <Input value={props.inputState.github} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"github\" label=\"Github\" />\r\n            <Input value={props.inputState.liveDemo} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"liveDemo\" label=\"Live Demo\" />\r\n            <Input value={props.inputState.image} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"image\" label=\"Image URL\" />\r\n            <Input value={props.inputState.description} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"description\" label=\"Description\" multiline />\r\n            <Input value={props.inputState.toolsUsed} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"toolsUsed\" label=\"Tools used\" multiline />\r\n            <Input type='password' value={props.inputState.password} clicked={(e) => handleChange(e.target.name, e.target.value)} name=\"password\" label=\"Password\" />\r\n            <Button fullWidth variant=\"contained\" color=\"primary\" type='submit'>Submit</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputState: state.adminPanel.inputs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onChange: (name, value) => dispatch(actions.setInputState(name, value)),\r\n        onSubmit: (data) => dispatch(actions.saveData(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminPanel)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 305,\r\n        minHeight: 400,\r\n        margin: '10px'\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.image}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {props.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    <a href={props.github}>Github</a>\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    <a href={props.liveDemo}>Live Demo</a>\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Card from '../../Components/Card/Card'\r\nimport { Grid } from '@material-ui/core';\r\nimport classes from './Homepage.module.css'\r\n\r\nfunction Homepage(props) {\r\n    useEffect(() => {\r\n        props.onfetch()\r\n    }, [])\r\n\r\n    let myProjects = [];\r\n    // let basic = Object.keys(props.projects.basic);\r\n    // let fun = Object.keys(props.projects.fun);\r\n    for (const property in props.projects) {\r\n        for (const keys in props.projects[property]) {\r\n            myProjects.push(props.projects[property][keys])\r\n        }\r\n    }\r\n    let advanced = myProjects.filter(project => project.select == 'advanced');\r\n    let basic = myProjects.filter(project => project.select == 'basic');\r\n    let fun = myProjects.filter(project => project.select == 'fun');\r\n\r\n    return (\r\n        <div>\r\n            <Grid style={{ padding: '30px' }} container >\r\n                <Grid item xs={12}>\r\n                    <h1 style={{ marginBottom: '20px' }}>Advance Projects:</h1>\r\n                </Grid>\r\n                {\r\n                    advanced.map((project, index) => (\r\n                        <Grid item xs={12} lg={3} sm={6} md={4} key={index}>\r\n                            <Card\r\n                                name={project.name}\r\n                                description={project.description}\r\n                                github={project.github}\r\n                                liveDemo={project.liveDemo}\r\n                                image={project.image}\r\n                            />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n                <Grid item xs={12}>\r\n                    <hr />\r\n                    <h1>Basic Projects:</h1>\r\n                </Grid>\r\n                {\r\n                    basic.map((project, index) => (\r\n                        <Grid key={index} item xs={12} lg={3} sm={6} md={4}>\r\n                            <Card\r\n                                name={project.name}\r\n                                description={project.description}\r\n                                github={project.github}\r\n                                liveDemo={project.liveDemo}\r\n                                image={project.image}\r\n                            />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n                <Grid className={classes.section} item xs={12}>\r\n                    <hr />\r\n                    <h1>Fun Projects:</h1>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        projects: state.homepage.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onfetch: () => dispatch(actions.fetchData())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SearchAppBar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '500px',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <Typography onClick={() => props.history.push('/')} className={classes.title} variant=\"h6\" noWrap>\r\n                            Home\r\n                    </Typography>\r\n                        <Typography onClick={() => window.location.replace('https://github.com/Saurabgami977')} className={classes.title} variant=\"h6\" noWrap>\r\n                            Github\r\n                    </Typography>\r\n                        <Typography onClick={() => props.history.push('/admin')} className={classes.title} variant=\"h6\" noWrap>\r\n                            Admin\r\n                    </Typography>\r\n                    </div>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport AdminPanel from './Containers/Admin/AdminPanel';\nimport Homepage from './Containers/Homepage/Homepage';\nimport Navbar from './Components/Navbar/Navbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Navbar} />\n      <Switch>\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/admin\" exact component={AdminPanel} />\n      </Switch>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    inputs: {\r\n        select: 'advanced',\r\n        name: '',\r\n        github: '',\r\n        liveDemo: '',\r\n        description: '',\r\n        toolsUsed: [],\r\n        password: null,\r\n        image: '',\r\n    },\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_INPUT_STATE:\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.name]: action.value\r\n                }\r\n            }\r\n        case actionTypes.SEND_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    select: 'advanced',\r\n                    name: '',\r\n                    github: '',\r\n                    liveDemo: '',\r\n                    description: '',\r\n                    toolsUsed: [],\r\n                    password: null,\r\n                    image: '',\r\n                }\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    data: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_PROJECTS_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport adminPanelReducer from './store/reducers/adminPanel';\nimport homepageReducer from './store/reducers/homepageReducer';\n\nconst rootReducer = combineReducers({\n  adminPanel: adminPanelReducer,\n  homepage: homepageReducer\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"AdminPanel_Form__ENq5W\"};"],"sourceRoot":""}